services:
  le-dns-updater:
    image: ghcr.io/umputun/le-dns-updater:master
    container_name: le-dns-updater
    hostname: le-dns-updater
    restart: always

    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    volumes:
      - ./private/le-dns-updater:/srv/var
      - /var/run/docker.sock:/var/run/docker.sock:ro
    # See https://github.com/go-acme/lego#dns-providers for details
    # DO_AUTH_TOKEN
    env_file: private/environment/le-dns-updater.env
    command:
      - paskal.07@gmail.com  # email
      - digitalocean         # provider
      - "terrty.net *.terrty.net terrty.com *.terrty.com terrty.dev *.terrty.dev paskal.dev *.paskal.dev pask.al *.pask.al ksinia.net *.ksinia.net ksinia.com *.ksinia.com ksinia.dev *.ksinia.dev" # domains
      - "docker restart nginx"

  nginx:
    image: nginx:1-alpine
    hostname: nginx
    restart: always
    container_name: nginx
    depends_on:
      - grafana
      - zabbix-web
      - plausible
      - adminer
      - updater

    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"

    volumes:
      # terrty.net blog source code
      - ../blog/public:/usr/share/nginx/html
      # ksinia.net source code
      - ./private/ksinia/public/:/usr/share/nginx/html2
      # common files
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./config/nginx/ssl.conf:/etc/nginx/ssl.conf
      - ./config/nginx/static.conf:/etc/nginx/static.conf
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      # certificate folder from le-dns-updater
      - ./private/le-dns-updater/certificates:/etc/nginx/le-dns-updater
      # htpasswd files for basic auth
      - ./private/nginx-htpasswd:/etc/nginx/htpasswd:ro

    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"

    environment:
      - TZ=UTC

  remark42:
    image: ghcr.io/umputun/remark42:master
    container_name: "remark42"
    hostname: "remark42"
    restart: always

    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"

    expose:
      - "8080"

    # many variables
    env_file: private/environment/remark42.env

    environment:
      - REMARK_URL=https://remark42.terrty.net
      - SITE=terrty
    volumes:
      - ./private/remark42-data:/srv/var

  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    restart: always
    volumes:
      - ./config/grafana.ini:/etc/grafana/grafana.ini:ro
      # Data persistence
      # to make it work run chown 472:472 -R ./private/grafana-data
      - ./private/grafana-data:/var/lib/grafana

    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"

    expose:
      - "3000"
    # uncomment for local tests
    # ports:
    #     - 3000:3000
    environment:
      - TZ=UTC
      - GF_INSTALL_PLUGINS=alexanderzobnin-zabbix-app
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=alexanderzobnin-zabbix-datasource

  zabbix-web:
    image: zabbix/zabbix-web-nginx-mysql:latest
    container_name: zabbix-web
    hostname: zabbix-web
    restart: always
    depends_on:
      - zabbix-server

    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"

    # MYSQL_DATABASE, MYSQL_PASSWORD, MYSQL_USER
    env_file: private/environment/mysql.env
    environment:
      - TZ=UTC
      - DB_SERVER_SOCKET=/var/run/mysqld/mysqld.sock
      - ZBX_SERVER_HOST=zabbix-server
      - PHP_TZ=Europe/Moscow
    expose:
      - "8080"
    # uncomment for local tests
    # ports:
    #     - "8080:8080"
    volumes:
      # MySQL socket to prevent transferring data through TCP
      - ./private/mysqld:/var/run/mysqld

  zabbix-server:
    build: config/zabbix
    image: ghcr.io/paskal/zabbix-server-mysql:latest
    container_name: zabbix-server
    hostname: zabbix-server
    restart: always

    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"

    # MYSQL_DATABASE, MYSQL_PASSWORD, MYSQL_USER
    env_file: private/environment/mysql.env
    volumes:
      - ./config/zabbix/externalscripts:/usr/lib/zabbix/externalscripts
      # MySQL socket to prevent transferring data through TCP
      - ./private/mysqld:/var/run/mysqld
    environment:
      - TZ=UTC
      - DB_SERVER_SOCKET=/var/run/mysqld/mysqld.sock
      - ZBX_TIMEOUT=30
      - DB_SERVER_PORT=3306
    ports:
      - "10051:10051"

  # In order for data collection from Zabbix Server to work,
  # you'll need to go to host settings in Zabbix and change Agent
  # interface from "IP 127.0.0.1" to "DNS Name zabbix-agent"
  zabbix-agent:
    image: zabbix/zabbix-agent2:latest
    container_name: zabbix-agent
    restart: always
    privileged: true
    user: root

    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"

    volumes:
      # this is needed in order to monitor docker
      - /var/run/docker.sock:/var/run/docker.sock

    environment:
      - TZ=UTC
      - ZBX_HOSTNAME=Zabbix server
      - ZBX_SERVER_HOST=zabbix-server

  mysql:
    image: jamielsharief/mysql:latest
    container_name: mysql
    command:
      - mysqld
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_bin
      - --innodb-monitor-enable=all
      - --skip-mysqlx

    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"

    # MYSQL_DATABASE, MYSQL_PASSWORD, MYSQL_USER
    env_file: private/environment/mysql.env
    environment:
      - TZ=UTC
    expose:
      - "3306"
    # uncomment for local tests
    # ports:
    # - 3306:3306
    volumes:
      # Data persistence
      - ./private/mysql-data:/var/lib/mysql
      # MySQL socket to prevent transferring data through TCP
      - ./private/mysqld:/var/run/mysqld
    # fix for `mbind: Operation not permitted`
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE
    restart: always

  plausible_db:
    image: postgres:14-alpine
    hostname: plausible_db
    container_name: plausible_db
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres

  plausible_events_db:
    image: clickhouse/clickhouse-server:24.3.3.102-alpine
    hostname: plausible_events_db
    container_name: plausible_events_db
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    volumes:
      - event-data:/var/lib/clickhouse
      - ./config/clickhouse/server-logging.xml:/etc/clickhouse-server/config.d/logging.xml:ro
      - ./config/clickhouse/user-logging.xml:/etc/clickhouse-server/users.d/logging.xml:ro
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  plausible:
    image: ghcr.io/plausible/community-edition:v2.1.5
    hostname: plausible
    container_name: plausible
    command: sh -c "sleep 10 && /entrypoint.sh db createdb && /entrypoint.sh db migrate && /entrypoint.sh run"
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    depends_on:
      - plausible_db
      - plausible_events_db
    expose:
      - "8000"
    environment:
      - BASE_URL=https://stats.terrty.net
    volumes:
      # robots.txt restricting indexing anything on the stats website
      - ./config/plausible-robots.txt:/app/lib/plausible-0.0.1/priv/static/robots.txt:ro
    # SECRET_KEY_BASE, TOTP_VAULT_KEY, many other variables
    env_file: private/environment/plausible.env

  adminer:
    image: adminer
    hostname: adminer
    container_name: adminer
    expose:
      - "8080"
    environment:
      ADMINER_DEFAULT_SERVER: localhost
    volumes:
      # MySQL socket to prevent transferring data through TCP
      - ./private/mysqld:/var/run/mysqld

    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"

    restart: unless-stopped

  updater:
    image: ghcr.io/umputun/updater:master
    container_name: updater
    hostname: updater
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    # KEY variable
    env_file: private/environment/updater.env
    environment:
      - LISTEN=0.0.0.0:8080
      - CONF=/etc/updater.yml
    expose:
      - "8080"
    volumes:
      - ./config/updater.yaml:/etc/updater.yml
      - ./private/updater_ssh_key:/home/app/.ssh/id_rsa

  newscope:
    image: ghcr.io/umputun/newscope:master
    container_name: newscope
    hostname: newscope
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    # OPENAI_API_KEY variable
    env_file: private/environment/newscope.env
    environment:
      - TZ=Europe/Amsterdam
    volumes:
      - ./config/newscope.yml:/srv/config.yml:ro
      - ./private/newscope-data:/srv/var
    expose:
      - "8080"
    command: ["--config=/srv/config.yml"]

volumes:
  db-data:
    driver: local
  event-data:
    driver: local
